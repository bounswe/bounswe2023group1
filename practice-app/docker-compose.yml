version: '3.1'
services:
  app:
    container_name: backend
    image: backend:latest
    build: ./backend/disasterresponse
    expose:
      - "4000"
    depends_on:
      - postgresqldb
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/compose-postgres
      - SPRING_DATASOURCE_USERNAME=compose-postgres
      - SPRING_DATASOURCE_PASSWORD=compose-postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
    networks:
      - app_network
      
  postgresqldb:
    image: 'postgres:13.1'
    container_name: db
    environment:
      - POSTGRES_USER=compose-postgres
      - POSTGRES_PASSWORD=compose-postgres
    networks:
      - app_network
      
  frontend_build:
    container_name: frontend
    build: ./frontend/disasterresponse
    image: frontend:latest
    volumes:
      - ./frontend/disasterresponse/node_modules:/app/node_modules
      - frontend_files:/app/build
    networks:
      - app_network

  webserver:
    image: nginx
    container_name: webserver
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - frontend_files:/var/www:r
      - ./nginx/:/etc/nginx/conf.d/
    networks:
      - app_network

volumes:
  frontend_files:

networks:
  app_network: